{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverseList","resetList","this","reorderedGoods","goods","visibleGoods","sort","first","next","localeCompare","length","Error","reverse","getReorderedGoods","isResetBtnClicked","Boolean","className","type","classnames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,YAAc,WACZ,EAAKJ,UAAS,SAAAL,GAAK,MACjB,CAAEC,YAAaD,EAAMC,gBAhB3B,EAoBES,UAAY,WACV,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAhEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASS,SACZ,OAAOU,EAAME,cAAcD,GAE7B,KAAKpB,EAASW,OACZ,OAAOQ,EAAMG,OAASF,EAAKE,OAE7B,KAAKtB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIiB,MAAM,uBAKlBnB,GACFa,EAAaO,UAGRP,EAqCkBQ,CAAkBxB,EAAiBa,KAAKX,OACzDuB,EAAoBC,QAAQtB,IAAaL,EAASM,MAAQF,GAEhE,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASS,WAEtCsB,QAASjB,KAAKP,mBANhB,iCAYA,wBACEsB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYzB,IAAaL,EAASW,SAEtCoB,QAASjB,KAAKJ,aANhB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAa1B,IAEjB2B,QAASjB,KAAKF,YANhB,qBAWEc,GACA,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAASjB,KAAKD,UAHhB,sBAUJ,6BACE,6BACGE,EAAeiB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBArFrB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ea92135.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((first, next) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(next);\n\n      case SortType.LENGTH:\n        return first.length - next.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Wrong sort type');\n        break;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseList = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isResetBtnClicked = Boolean(sortType !== SortType.NONE || isReversed);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabetically}\n\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          { isResetBtnClicked && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}